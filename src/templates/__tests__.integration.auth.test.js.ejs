// const request = require('supertest')

// const app = require('../../src/app')
// const factory = require('../factories')
// const truncate = require('../utils/truncate')

// // Categoria de teste
// describe('Authentication', () => {
//     beforeEach(async () => {
//         await truncate()
//     })
//     // Teste em si
//     it('should authenticate with valid credentials', async () => {
//         const user = await factory.create('User', {
//             password: '12345678990'
//         })

//         const response = await request(app)
//             .post('/sessions')
//             .send({
//                 email: user.email,
//                 password: '12345678990'
//             })

//         expect(response.status).toBe(200)
//     })

//     it('should not authenticate with invalid email', async () => {
//         const response = await request(app)
//             .post('/sessions')
//             .send({
//                 email: 'douglas@douglas.com',
//                 password: '123456'
//             })

//         expect(response.status).toBe(401)
//     })

//     it('should not authenticate with invalid password', async () => {
//         const user = await factory.create('User', {
//             password: '12345678990'
//         })

//         const response = await request(app)
//             .post('/sessions')
//             .send({
//                 email: user.email,
//                 password: '123456'
//             })

//         expect(response.status).toBe(401)
//     })

//     it('should return jwt token when authenticated', async () => {
//         const user = await factory.create('User', {
//             password: '12345678990'
//         })

//         const response = await request(app)
//             .post('/sessions')
//             .send({
//                 email: user.email,
//                 password: '12345678990'
//             })

//         expect(response.body).toHaveProperty('token')
//     })

//     it('should be able to access private routes when authenticated', async () => {
//         const user = await factory.create('User', {
//             password: '12345678990'
//         })

//         const response = await request(app)
//             .get('/dashboard')
//             .set('Authorization', `Bearer ${user.generateToken()}`)

//         expect(response.status).toBe(200)
//     })

//     it('should be able to access private routes when not without jwt token', async () => {
//         const user = await factory.create('User', {
//             password: '12345678990'
//         })

//         const response = await request(app)
//             .get('/dashboard')

//         expect(response.status).toBe(401)
//     })

//     it('should not be able to access private routes with invalid jwt token', async () => {
//         const response = await request(app)
//             .get('/dashboard')
//             .set('Authorization', `Bearer 123`)

//         expect(response.status).toBe(401)
//     })
// })